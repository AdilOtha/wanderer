image: maven:latest

stages:
  - build
  - test
  - develop

variables:
  RULES_CHANGES_PATH: "**/*"

.base-rules:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: $CI_PIPELINE_SOURCE == "push"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - $RULES_CHANGES_PATH
    - when: manual
      allow_failure: true

.backend:
  extends: .base-rules
  variables:
    RULES_CHANGES_PATH: "backend/**/*"

.frontend:
  extends: .base-rules
  variables:
    RULES_CHANGES_PATH: "frontend/**/*"

frontend-build:
  image: node:12-alpine
  stage: build
  extends: .frontend
  needs: []
  script:
    - echo "building the frontend code..."
    - cd frontend
    - yarn install
    - yarn build
  # cache:
  #   key:
  #     files:
  #       - yarn.lock
  #   paths:
  #     - node_modules
  #   policy: pull


build-backend:
  stage: build
  extends: .backend
  needs: []
  tags:
    - ugrad
  script:
    - cd backend
    - mvn clean compile

test-backend:
  stage: test
  extends: .backend
  needs: ["build-backend"]
  tags:
    - ugrad
  script:
    - cd backend
    - mvn clean test

frontend-test:
  stage: test
  image: node:12-alpine
  extends: .frontend
  needs: ["frontend-build"]
  before_script:
    - apk add chromium
    - export CHROME_BIN=/usr/bin/chromium-browser
  script:
    - echo "Testing the frontend code..."
    - cd frontend
    - yarn install
    - yarn test

#develop:
#  stage: develop
#  rules:
#    - if: $CI_COMMIT_BRANCH =~ /^master$/
#  needs: ["test-backend"]
#  tags:
#    - ugrad
#  before_script:
#    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
#    - eval $(ssh-agent -s)
#    - chmod og-rwx ${DEPLOY_SSH_KEY}

#  script:
#    - cd backend
#    - mvn clean install -DskipTests
#    - echo "dbURL=$DATABASE_URL" > config.properties
#    - echo "dbUserName=$TEST_DATABASE_USERNAME" >> config.properties
#    - echo "dbPassword=$TEST_DATABASE_PASSWORD" >> config.properties
#    - echo "dbDriver=$TEST_DATABASE" >> config.properties
#    - pwd
#    - ls -lrth
#    - ls target/
#    - ls -lrth ~/.ssh
#    - echo "Deploying the develop pipeline"
#    - zip -r ${CI_COMMIT_SHORT_SHA}.zip . -i target/wanderer-0.0.1-SNAPSHOT.jar
#    - scp -r -o StrictHostKeyChecking=no ${CI_COMMIT_SHORT_SHA}.zip "${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_DIR}/${CI_COMMIT_SHORT_SHA}.zip"

staging:
  stage: develop
  before_script:
    - sudo apt-get install heroku
    - heroku login -u patel.janvi23798@gmail.com -p $HEROKU_STAGING_API_KEY
  script:
    - heroku whoami
  only:
    - develop

